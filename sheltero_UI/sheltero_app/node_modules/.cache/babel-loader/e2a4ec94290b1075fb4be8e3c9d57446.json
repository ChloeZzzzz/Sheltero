{"ast":null,"code":"import _objectWithoutProperties from \"/Users/abeishiwo/Documents/2020Study-Sem1/WEBIT[INFO30005]/GitHub_sheltero/Sheltero/sheltero_UI/sheltero_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/abeishiwo/Documents/2020Study-Sem1/WEBIT[INFO30005]/GitHub_sheltero/Sheltero/sheltero_UI/sheltero_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/abeishiwo/Documents/2020Study-Sem1/WEBIT[INFO30005]/GitHub_sheltero/Sheltero/sheltero_UI/sheltero_app/src/components/SearchArea.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 300px;\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n  \\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n    & span {\\n      flex-grow: 1;\\n    }\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n    & svg {\\n      color: #638709;\\n    }\\n  }\\n  & li[data-focus='true'] {\\n    background-color: #DAE6AC;\\n    cursor: pointer;\\n    & svg {\\n      color: #638709;\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 22px;\\n  background-color: #99C015;\\n  border: 1px solid #e8e8e8;\\n  border-radius: 2px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n  &:focus {\\n    border-color: #638709;\\n    background-color: #e6f7ff;\\n    \\n  }\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    font-family: \\\"Lucida Console\\\", Courier, monospace;\\n    text-overflow: ellipsis;\\n    \\n  }\\n  & svg {\\n    font-size: 12px;\\n    cursor: pointer;\\n    padding: 4px;\\n    \\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \\n  border: 1px solid #d9d9d9;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  color: white;\\n  \\n  \\n  &:hover {\\n    border-color: #343078;\\n    box-shadow: 0 0 0 2px rgb(223, 252, 3)\\n  }\\n  &.focused {\\n    border-color: #638709;\\n    ;\\n  }\\n  & input {\\n    font-size: 14px;\\n    height: 30px;\\n    box-sizing: border-box;\\n    padding: 4px 6px;\\n    width: 0;\\n    min-width: 30px;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n    \\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 0 4px;\\n  line-height: 1.5;\\n  display: block;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\nvar Label = styled('label')(_templateObject());\nvar InputWrapper = styled('div')(_templateObject2());\nvar Tag = styled(function (_ref) {\n  var label = _ref.label,\n      onDelete = _ref.onDelete,\n      props = _objectWithoutProperties(_ref, [\"label\", \"onDelete\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n})(_templateObject3());\nvar Listbox = styled('ul')(_templateObject4());\nexport default function SearchByArea() {\n  var _this2 = this;\n\n  var _useAutocomplete = useAutocomplete({\n    id: 'SearchByArea',\n    defaultValue: [MelbourneArea[1]],\n    multiple: true,\n    options: MelbourneArea,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    }\n  }),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      groupedOptions = _useAutocomplete.groupedOptions,\n      value = _useAutocomplete.value,\n      focused = _useAutocomplete.focused,\n      setAnchorEl = _useAutocomplete.setAnchorEl;\n\n  return /*#__PURE__*/React.createElement(NoSsr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Label, Object.assign({}, getInputLabelProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }), \"Select Area to search\"), /*#__PURE__*/React.createElement(InputWrapper, {\n    ref: setAnchorEl,\n    className: focused ? 'focused' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, value.map(function (option, index) {\n    return /*#__PURE__*/React.createElement(Tag, Object.assign({\n      label: option.name\n    }, getTagProps({\n      index\n    }), {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  })))), groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(Listbox, Object.assign({}, getListboxProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), groupedOptions.map(function (option, index) {\n    return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, getOptionProps({\n      option,\n      index\n    }), {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, option.name), /*#__PURE__*/React.createElement(CheckIcon, {\n      fontSize: \"small\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }));\n  })) : null));\n}\nvar MelbourneArea = [{\n  name: 'Carlton',\n  code: 3053\n}, {\n  name: 'Carlton North',\n  code: 3054\n}, {\n  name: 'Docklands',\n  code: 3008\n}, {\n  name: 'East Melbourne',\n  code: 3002\n}, {\n  name: 'Flemington',\n  code: 3031\n}, {\n  name: \"Kensington\",\n  code: 3031\n}, {\n  name: 'Melbourne (Central business district)',\n  code: 3000\n}, {\n  name: 'Melbourne (St Kilda Road area, shared with City of Port Phillip)',\n  code: 3004\n}, {\n  name: 'North Melbourne ',\n  code: 3051\n}, {\n  name: 'Parkville',\n  code: 3052\n}, {\n  name: 'Port Melbourne',\n  code: 3207\n}, {\n  name: 'Southbank',\n  code: 3006\n}, {\n  name: 'South Wharf',\n  code: 3006\n}, {\n  name: 'South Yarra',\n  code: 3141\n}, {\n  name: 'TWest Melbourne',\n  code: 3003\n}];","map":{"version":3,"sources":["/Users/abeishiwo/Documents/2020Study-Sem1/WEBIT[INFO30005]/GitHub_sheltero/Sheltero/sheltero_UI/sheltero_app/src/components/SearchArea.js"],"names":["React","useAutocomplete","NoSsr","CheckIcon","CloseIcon","styled","Label","InputWrapper","Tag","label","onDelete","props","Listbox","SearchByArea","id","defaultValue","MelbourneArea","multiple","options","getOptionLabel","option","name","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","map","index","length","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n  font-weight: bold;\n`;\n\nconst InputWrapper = styled('div')`\n  \n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n  color: white;\n  \n  \n  &:hover {\n    border-color: #343078;\n    box-shadow: 0 0 0 2px rgb(223, 252, 3)\n  }\n  &.focused {\n    border-color: #638709;\n    ;\n  }\n  & input {\n    font-size: 14px;\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    border: 0;\n    margin: 0;\n    outline: 0;\n    \n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n    <div {...props}>\n        <span>{label}</span>\n        <CloseIcon onClick={onDelete} />\n    </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #99C015;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n  &:focus {\n    border-color: #638709;\n    background-color: #e6f7ff;\n    \n  }\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    font-family: \"Lucida Console\", Courier, monospace;\n    text-overflow: ellipsis;\n    \n  }\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n    \n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  \n  & li {\n    padding: 5px 12px;\n    display: flex;\n    & span {\n      flex-grow: 1;\n    }\n    & svg {\n      color: transparent;\n    }\n  }\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n    & svg {\n      color: #638709;\n    }\n  }\n  & li[data-focus='true'] {\n    background-color: #DAE6AC;\n    cursor: pointer;\n    & svg {\n      color: #638709;\n    }\n  }\n`;\n\n\nexport default function SearchByArea() {\n    const {\n        getRootProps,\n        getInputLabelProps,\n        getInputProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        groupedOptions,\n        value,\n        focused,\n        setAnchorEl,\n    } = useAutocomplete({\n        id: 'SearchByArea',\n        defaultValue: [MelbourneArea[1]],\n        multiple: true,\n        options: MelbourneArea,\n        getOptionLabel: (option) => option.name,\n    });\n\n    return (\n        <NoSsr>\n            <div>\n                <div {...getRootProps()}>\n                    <Label {...getInputLabelProps()}>\n                        Select Area to search\n                    </Label>\n                    <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n                        {value.map((option, index) => (\n                            <Tag label={option.name} {...getTagProps({ index })} />\n                        ))}\n\n                        <input {...getInputProps()} />\n                    </InputWrapper>\n                </div>\n                {groupedOptions.length > 0 ? (\n                    <Listbox {...getListboxProps()}>\n                        {groupedOptions.map((option, index) => (\n                            <li {...getOptionProps({ option, index })}>\n                                <span>{option.name}</span>\n                                <CheckIcon fontSize=\"small\" />\n                            </li>\n                        ))}\n                    </Listbox>\n                ) : null}\n            </div>\n        </NoSsr>\n    );\n}\nconst MelbourneArea = [\n  { name: 'Carlton', code: 3053 },\n  { name: 'Carlton North', code: 3054 },\n  { name: 'Docklands', code: 3008 },\n  { name: 'East Melbourne', code: 3002 },\n  { name: 'Flemington', code: 3031 },\n  { name: \"Kensington\", code: 3031 },\n  { name: 'Melbourne (Central business district)', code: 3000 },\n  { name: 'Melbourne (St Kilda Road area, shared with City of Port Phillip)', code: 3004 },\n  { name: 'North Melbourne ', code: 3051 },\n  { name: 'Parkville', code: 3052 },\n  { name: 'Port Melbourne', code: 3207 },\n  { name: 'Southbank', code: 3006  },\n  { name: 'South Wharf', code: 3006 },\n  { name: 'South Yarra', code: 3141 },\n  { name: 'TWest Melbourne', code: 3003 },\n];\n"]},"metadata":{},"sourceType":"module"}